AWSTemplateFormatVersion: '2010-09-09'
Description: Minimal Argo CD bootstrap onto existing EKS via CodeBuild + Lambda (no local kubectl).

Parameters:
  ClusterName:
    Type: String
    Description: Existing EKS cluster name (e.g., demo-eks-dev)
  Region:
    Type: String
    Default: ap-southeast-2
  KubernetesNamespace:
    Type: String
    Default: argocd
  ExposeServerAsLB:
    Type: String
    AllowedValues: ["true", "false"]
    Default: "true"
    Description: If true, patch argocd-server to type=LoadBalancer
  SSMParamPrefix:
    Type: String
    Default: /eks
    Description: SSM prefix where outputs are stored (e.g., /eks/<cluster>/argocd/*)

  # --- NEW GitOps parameters ---
  GitOpsRepoUrl:
    Type: String
    Default: "https://github.com/jimmy23782/GitOpsRepo.git"
  GitOpsBranch:
    Type: String
    Default: "feature/setuphelmcharts"
  GitOpsRootPath:
    Type: String
    Default: "argo/apps"

Resources:

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Policies:
        - PolicyName: ArgoBootstrapPerms
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: [ eks:DescribeCluster ]
                Resource: "*"
              - Effect: Allow
                Action:
                  - ec2:DescribeVpcs
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups
                Resource: "*"
              - Effect: Allow
                Action:
                  - ssm:PutParameter
                  - ssm:AddTagsToResource
                  - ssm:GetParameter
                  - ssm:GetParameters
                Resource: "*"
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchGetImage
                  - ecr:GetDownloadUrlForLayer
                Resource: "*"

  ArgoBootstrapProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "argocd-bootstrap-${ClusterName}"
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      TimeoutInMinutes: 30
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        PrivilegedMode: false
        EnvironmentVariables:
          - Name: CLUSTER_NAME
            Value: !Ref ClusterName
          - Name: AWS_DEFAULT_REGION
            Value: !Ref Region
          - Name: K8S_NS
            Value: !Ref KubernetesNamespace
          - Name: EXPOSE_LB
            Value: !Ref ExposeServerAsLB
          - Name: PARAM_PREFIX
            Value: !Ref SSMParamPrefix
          # --- NEW GitOps env vars ---
          - Name: GITOPS_REPO_URL
            Value: !Ref GitOpsRepoUrl
          - Name: GITOPS_BRANCH
            Value: !Ref GitOpsBranch
          - Name: GITOPS_ROOT_PATH
            Value: !Ref GitOpsRootPath
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Sub "/aws/codebuild/argocd-bootstrap-${ClusterName}"
      Source:
        Type: NO_SOURCE
        BuildSpec: |
          version: 0.2
          env:
            shell: bash
          phases:
            install:
              commands:
                - set -euo pipefail
                - KVER=1.30.0
                - curl -sLo kubectl "https://dl.k8s.io/release/v${KVER}/bin/linux/amd64/kubectl"
                - chmod +x kubectl && mv kubectl /usr/local/bin/
                - aws eks update-kubeconfig --name "$CLUSTER_NAME" --region "$AWS_DEFAULT_REGION"
            build:
              commands:
                - set -euo pipefail
                - kubectl create namespace "$K8S_NS" || true
                - kubectl apply -n "$K8S_NS" -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
                - kubectl -n "$K8S_NS" rollout status deploy/argocd-server --timeout=600s
                - |
                  if [ "$EXPOSE_LB" = "true" ]; then
                    kubectl -n "$K8S_NS" patch svc argocd-server -p '{"spec":{"type":"LoadBalancer"}}' || true
                  fi
                # --- NEW: create app-of-apps Application ---
                - |
                  echo "Applying app-of-apps (repo=$GITOPS_REPO_URL, branch=$GITOPS_BRANCH, path=$GITOPS_ROOT_PATH)"
                  cat <<EOF | envsubst | kubectl apply -f -
                  apiVersion: argoproj.io/v1alpha1
                  kind: Application
                  metadata:
                    name: bootstrap-apps
                    namespace: ${K8S_NS}
                  spec:
                    project: default
                    source:
                      repoURL: ${GITOPS_REPO_URL}
                      targetRevision: ${GITOPS_BRANCH}
                      path: ${GITOPS_ROOT_PATH}
                    destination:
                      server: https://kubernetes.default.svc
                      namespace: ${K8S_NS}
                    syncPolicy:
                      automated:
                        prune: true
                        selfHeal: true
                      syncOptions:
                        - CreateNamespace=true
                  EOF
                - kubectl -n "$K8S_NS" patch application bootstrap-apps --type merge -p '{"metadata":{"annotations":{"argocd.argoproj.io/refresh":"hard"}}}' || true
                - kubectl get applications.argoproj.io -A -o wide || true

  CodeBuildClusterAdminAccess:
    Type: AWS::EKS::AccessEntry
    Properties:
      ClusterName: !Ref ClusterName
      PrincipalArn: !GetAtt CodeBuildServiceRole.Arn
      AccessPolicies:
        - AccessScope:
            Type: cluster
          PolicyArn: arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy

  # TriggerFn + ArgoInstall remain unchangedâ€¦