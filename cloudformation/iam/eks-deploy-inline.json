{
  "Version": "2012-10-17",
  "Statement": [
    { "Sid": "IamForClusterAndOIDC",
      "Effect": "Allow",
      "Action": [
        "iam:CreateRole","iam:DeleteRole","iam:UpdateRole","iam:UpdateAssumeRolePolicy",
        "iam:AttachRolePolicy","iam:DetachRolePolicy",
        "iam:PutRolePolicy","iam:DeleteRolePolicy",
        "iam:PassRole",
        "iam:CreateOpenIDConnectProvider","iam:DeleteOpenIDConnectProvider",
        "iam:TagRole","iam:UntagRole",
        "iam:TagOpenIDConnectProvider","iam:UntagOpenIDConnectProvider",
        "iam:CreateServiceLinkedRole"
      ],
      "Resource": "*"
    },
    { "Sid": "EksControlPlaneAndNodegroups",
      "Effect": "Allow",
      "Action": [
        "eks:CreateCluster","eks:DescribeCluster","eks:DeleteCluster",
        "eks:TagResource","eks:UntagResource","eks:ListTagsForResource",
        "eks:CreateNodegroup","eks:DescribeNodegroup","eks:DeleteNodegroup","eks:ListNodegroups"
      ],
      "Resource": "*"
    },
    { "Sid": "DescribeNetworking",
      "Effect": "Allow",
      "Action": [
        "ec2:DescribeVpcs","ec2:DescribeSubnets","ec2:DescribeRouteTables",
        "ec2:DescribeSecurityGroups","ec2:DescribeInternetGateways","ec2:DescribeImages"
      ],
      "Resource": "*"
    },
    { "Sid": "LambdaCrudAndInvokeForArgoBootstrap",
      "Effect": "Allow",
      "Action": [
        "lambda:CreateFunction",
        "lambda:DeleteFunction",
        "lambda:UpdateFunctionCode",
        "lambda:UpdateFunctionConfiguration",
        "lambda:GetFunction",
        "lambda:AddPermission",
        "lambda:RemovePermission",
        "lambda:CreateEventSourceMapping",
        "lambda:DeleteEventSourceMapping",
        "lambda:InvokeFunction"
      ],
      "Resource": "arn:aws:lambda:ap-southeast-2:685801731369:function:demo-eks-argocd-dev-TriggerFn-*"
    },
      {
      "Sid": "CodeBuildCrudForArgoBootstrap",
      "Effect": "Allow",
      "Action": [
        "codebuild:CreateProject",
        "codebuild:UpdateProject",
        "codebuild:DeleteProject",
        "codebuild:BatchGetProjects",
        "codebuild:StartBuild",
        "codebuild:BatchGetBuilds",
        "codebuild:ListBuildsForProject",
        "codebuild:ListBuilds"
      ],
      "Resource": "*"
    },
    { "Sid": "PassServiceRolesForBootstrap",
      "Effect": "Allow",
      "Action": "iam:PassRole",
      "Resource": "arn:aws:iam::685801731369:role/demo-eks-argocd-dev-*",
      "Condition": { "StringEquals": { "iam:PassedToService": ["lambda.amazonaws.com","codebuild.amazonaws.com"] } }
    },
    { "Sid": "LogsCreateGroups",
      "Effect": "Allow",
      "Action": ["logs:CreateLogGroup"],
      "Resource": "*"
    },
    {
      "Sid": "LogsForBootstrap",
      "Effect": "Allow",
      "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents",
        "logs:DescribeLogStreams",
        "logs:GetLogEvents"
      ],
      "Resource": [
        "arn:aws:logs:ap-southeast-2:685801731369:log-group:/aws/lambda/demo-eks-argocd-dev-TriggerFn-*:*",
        "arn:aws:logs:ap-southeast-2:685801731369:log-group:/aws/codebuild/argocd-bootstrap-demo-eks-dev:*"
      ]
    },
    {
    "Sid": "EksUpdateAndDescribe",
    "Effect": "Allow",
    "Action": [
      "eks:UpdateClusterConfig",
      "eks:UpdateClusterVersion",
      "eks:DescribeUpdate",
      "eks:UpdateAddon",
      "eks:CreateAddon",
      "eks:DeleteAddon",
      "eks:ListAddons",
      "eks:UpdateNodegroupConfig",
      "eks:UpdateNodegroupVersion"
    ],
    "Resource": "*"
  },
    {
    "Sid": "EksAccessEntryAdmin",
    "Effect": "Allow",
    "Action": [
      "eks:CreateAccessEntry",
      "eks:DeleteAccessEntry",
      "eks:AssociateAccessPolicy",
      "eks:DisassociateAccessPolicy",
      "eks:DescribeAccessEntry",
      "eks:ListAccessEntries",
      "eks:ListAssociatedAccessPolicies", 
      "eks:ListAccessPolicies"  
    ],
    "Resource": "*"
  }
  ]
}