AWSTemplateFormatVersion: '2010-09-09'
Description: Minimal VPC for EKS/Labs (2 public subnets, 0 NAT) - ap-southeast-2

Parameters:
  VpcCidr:
    Type: String
    Default: "10.0.0.0/16"
  AZ1:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: "ap-southeast-2a"
  AZ2:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: "ap-southeast-2b"
  Pub1Cidr:
    Type: String
    Default: "10.0.0.0/20"
  Pub2Cidr:
    Type: String
    Default: "10.0.16.0/20"
  # NEW: pass the EKS cluster name to tag subnets once
  ClusterName:
    Type: String
    Default: "demo-eks-dev"
    Description: "EKS cluster name used for subnet discovery/cleanup tags"

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-vpc"

  IGW:
    Type: AWS::EC2::InternetGateway

  AttachIgw:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref IGW

  PublicRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicDefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRT
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref IGW

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AZ1
      CidrBlock: !Ref Pub1Cidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-public-${AZ1}"
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: !Sub "kubernetes.io/cluster/${ClusterName}"
          Value: "shared"

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AZ2
      CidrBlock: !Ref Pub2Cidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-public-${AZ2}"
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: !Sub "kubernetes.io/cluster/${ClusterName}"
          Value: "shared"

  AssocPub1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRT

  AssocPub2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRT

Outputs:
  VpcId:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}:VpcId"
  PublicSubnetIds:
    Description: Comma-separated public subnet IDs (AZ1, AZ2)
    Value: !Join
      - ","
      - - !Ref PublicSubnet1
        - !Ref PublicSubnet2
    Export:
      Name: !Sub "${AWS::StackName}:PublicSubnetIds"